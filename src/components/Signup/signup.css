.input-field {
	background-color: var(--gray-300);
	width: min(28rem, 85vw);
	height: 3.6rem;
	border-radius: var(--rounded);
	margin: 1.2rem 1.6rem;
	padding: 0.4rem 1rem;
	font-size: 1.4rem;
	color: var(--gray-700);
}
.input-field:focus {
	border: 1px solid var(--gray-700);
}

.input-area {
	position: relative;
}

.label-for {
	font-size: 1.4rem;
	color: var(--gray-700);
	font-weight: 400;
	position: absolute;
	top: 50%;
	left: 8%;
	transform: translate(0%, -50%);
	pointer-events: none;
	transition: all 250ms ease-in;
}

.input-field:valid + .label-for {
	transform: translate(0%, -3.8rem);
	color: var(--gray-600);
	font-size: 1.3rem;
}

.input-field:focus + .label-for {
	transform: translate(0%, -3.8rem);
	color: var(--gray-600);
	font-size: 1.3rem;
}

h2.action-title {
	font-size: 2rem;
	font-weight: 600;
	color: var(--purple-900);
	margin: 1.6rem;
}

p.action-para {
	font-size: 1.4rem;
	font-weight: 400;
	color: var(--gray-600);
	margin-bottom: 1.6rem;
}

strong.action-strong {
	color: var(--purple-800);
}

h1.brand-name {
	font-size: 2.4rem;
	font-weight: 600;
	color: var(--purple-600);
	position: relative;
	margin: 1.6rem;
}

.brand-name::after {
	content: "";
	position: absolute;
	height: 0.4rem;
	width: 1.6rem;
	background-color: var(--purple-600);
	top: 3rem;
	left: 50%;
	border-radius: var(--rounded-md);
	transform: translate(-50%);
}

.auth-card {
	width: min(40rem, 90vw);
	background-image: linear-gradient(
		to bottom right,
		var(--gray-200),
		hsla(260, 10%, 19%, 41%)
	);
	border-radius: var(--rounded-md);
	display: flex;
	flex-direction: column;
	align-items: center;
	padding: 1.6rem;
	box-shadow: 0 4px 4px #0001;
}

.button {
	width: min(28rem, 85vw);
	height: 3.6rem;
	padding: 0.4rem 1.6rem;
	background-color: var(--purple-500);
	border-radius: var(--rounded);
	font-size: 1.4rem;
	font-weight: 500;
	box-shadow: 0 2px 2px var(--purple-400);
	margin: 2rem 2.4rem;
	margin-top: 3.2rem;
}

.button:hover {
	box-shadow: 0 4px 8px var(--purple-500);
	border: 1px solid var(--gray-600);
}

.form-area {
	display: flex;
	align-items: center;
	flex-direction: column;
	margin: 2.4rem;
}

i.eye-icon {
	position: absolute;
	left: 27rem;
	top: 2.1rem;
	font-size: 1.6rem;
	color: var(--gray-700);
	cursor: pointer;
}

.error-accent {
	border: 1px solid var(--red-600);
	box-shadow: 0 0 12px hsla(360, 82%, 61%, 0.4);
}
.error-message {
	width: min(40rem, 90vw);
	display: block;
	background-color: hsla(360, 82%, 61%, 0.1);
	color: var(--red-600);
	font-size: 1.4rem;
	text-align: center;
	margin: 1.6rem auto;
	padding: 0.8rem 1.6rem;
	border-radius: var(--rounded);
	border: 1px solid var(--red-600);
}

/* 
return icon and state 

useChangeInputType => takes inital value, true or false and returns state value after change and function 

useChangeInputType(false) => [type,setType,icon]


*/
